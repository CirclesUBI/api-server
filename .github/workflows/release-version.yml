name: Detect and tag new version

on:
  push:
    branches:
      - 'dev'
  workflow_dispatch:

jobs:
  tag-release:
    name: Tag and release a new new version
    runs-on: circles-ubuntu-8-32-300
    outputs:
      previous-version: ${{ steps.check-version.outputs.previous-version }}
      current-version: ${{ steps.check-version.outputs.current-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Detect and tag new version
        uses: salsify/action-detect-and-tag-new-version@v2
        id: check-version
      - name: Release new tag
        uses: ncipollo/release-action@v1
        if: steps.check-version.outputs.previous-version != steps.check-version.outputs.current-version
        with:
          allowUpdates: true
          generateReleaseNotes: true
          tag: ${{ steps.check-version.outputs.tag }}
          updateOnlyUnreleased: true
  call-build-push:
    name: Build tagged Container image
    needs: ['tag-release']
    uses: ./.github/workflows/build-push.yml
    if: needs.tag-release.outputs.previous-version != needs.tag-release.outputs.current-version
    with:
      ref: "refs/tags/v${{ needs.tag-release.outputs.current-version }}"
    secrets: inherit
  call-build-push-extensions:
    name: Build tagged Extensions image
    needs: ['tag-release']
    uses: ./.github/workflows/build-push.extensions.yml
    if: needs.tag-release.outputs.previous-version != needs.tag-release.outputs.current-version
    with:
      ref: "refs/tags/v${{ needs.tag-release.outputs.current-version }}"
    secrets: inherit
  call-build-push-migrations:
    name: Build tagged Migrations image
    needs: ['tag-release']
    uses: ./.github/workflows/build-push.migrations.yml
    if: needs.tag-release.outputs.previous-version != needs.tag-release.outputs.current-version
    with:
      ref: "refs/tags/v${{ needs.tag-release.outputs.current-version }}"
    secrets: inherit
